<Window x:Class="WpfBookTitle.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfBookTitle"
        mc:Ignorable="d"
        Title="Stu Book"
        SizeToContent="WidthAndHeight"
        FontSize="30" FontStyle="Italic"
        
        ListBox.SelectionChanged="ListBox_SelectionChanged"
        ButtonBase.Click="Button_Click"
        MouseRightButtonDown="AboutDialog_MouseRightButtonDown">
    <!--WPF Unleashed
    6.2, 145 About Dialog with Event handler on root; ListBoxItems handles right click, 
    and button has no border. -->
    <!--  6.4  Attached events eg: Window declaring Click and ListBox....Changed.
    Also, a warning about WeakEventManager to block memory leaks.-->
    <!--  6.10   173  Help Command-->

    <Window.Background>
        <SolidColorBrush>
            <SolidColorBrush.Color>
                <Color A="255"
                       R="255"
                       G="25"
                       B="125" />
            </SolidColorBrush.Color>
        </SolidColorBrush>
    </Window.Background>

    <Window.CommandBindings>
        <CommandBinding Command="Help"
                        CanExecute="Help_CanExecute"
                        Executed="Help_Executed" />
    </Window.CommandBindings>
    <!--  Remap Help to F2.  -->
    <Window.InputBindings>
        <KeyBinding Command="Help"
                    Key="F2" />
        <KeyBinding Command="NotACommand"
                    Key="F1" />
    </Window.InputBindings>
    
    
    
    
    <Grid>

        <StackPanel>

            <Label FontWeight="Bold"
                   FontSize="20"
                   Foreground="BlanchedAlmond">
                WPF Stu Book
            </Label>

            <Label FontWeight="Bold"
                   FontSize="20"
                   Foreground="Bisque">
                WPF 4.5  StuBook2
            </Label>

            <Menu>
                <MenuItem Name="formatMarginsMenuItem"
                          Header="_Margins..."
                          Click="FormatMarginsMenuItem_Click" />
                <!-- When menu item runs a function that displays a dialog box which does not require user interaction,
                such as an About dialog box, an ellipsis is not required.-->
            </Menu>

            <Label>Installed Chapters:</Label>

            <ListBox>
                <ListBoxItem>Chapter 1</ListBoxItem>
                <ListBoxItem>Chapter 2</ListBoxItem>
            </ListBox>

            <StackPanel
                Orientation="Horizontal"
                        HorizontalAlignment="Center"
                        TextElement.FontSize="20"
                        TextElement.FontStyle="Oblique"
                        TextElement.FontWeight="ExtraBold">
                
               <!--RelativeSource Self; 
                Command.Text; 
                wasn't included as an IntelliOption-->
                <Button MinWidth="75"
                        Margin="10"
                        Command="Help"
                        Content="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}" />

                <Button MinWidth="75"
                        Margin="10">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Foreground"
                                            Value="Red" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    OK
                </Button>

                <Button x:Name="ShowCustomDialog"
                        MinWidth="75"
                        Margin="10"
                        Click="ShowCustomDialog_Click"
                        Content="Show Custom Dialog"
                        TextElement.FontSize="6"
                        TextElement.FontStretch="Condensed">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Foreground"
                                            Value="Red" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

            </StackPanel>

            <StatusBar>You have successfully registered this product.</StatusBar>

            <!--  Ch6  176  Controls with built in command bindings; 
            Set CommandTarget to TextBox, causes the command to be executed by the TextBox,
            -->
            <StackPanel Name="noCodeJustCommands"
                        Orientation="Horizontal"
                        Height="32"
                        TextElement.FontSize="9"
                        TextElement.FontWeight="ExtraBold">

                <Button Command="Cut"
                        CommandTarget="{Binding ElementName=textBox}"
                        Content="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"
                        Width="25" />

                <Button Command="Copy"
                        CommandTarget="{Binding ElementName=textBox}"
                        Content="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"
                        Width="25" />

                <Button Command="Paste"
                        CommandTarget="{Binding ElementName=textBox}"
                        Content="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"
                        Width="25" />

                <Button Command="Undo"
                        CommandTarget="{Binding ElementName=textBox}"
                        Content="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"
                        Width="25" />

                <Button Command="Redo"
                        CommandTarget="{Binding ElementName=textBox}"
                        Content="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"
                        Width="25" />


                <Grid Height="32"
                      VerticalAlignment="Top">
                    <!--<Grid.RowDefinitions>-->
                        <!--<RowDefinition Height="6*" />
                        <RowDefinition Height="10*" />
                    </Grid.RowDefinitions>-->

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Label Name="savedTextLabel"
                           FontSize="5"
                           Grid.Row="0">Saved Text</Label>

                    <TextBox x:Name="textBox"
                             FontSize="12"
                             Grid.Column="1">Text that gets saved.</TextBox>




                </Grid>
                
                
            </StackPanel>
            
            
        </StackPanel>
        
    </Grid>
</Window>
